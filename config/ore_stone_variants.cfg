# Configuration file

blocks {

    "miscellaneous block settings" {
        # Variants will imitate the properties of their background blocks, such as the ability to fall like sand,
        # sustain leaves, etc.
        B:"Background Block Imitation"=true

        # Experimental. Setting this to true will disable the overlay transparency for better compatibility with shaders.
        B:"Disable Transparency"=false
        B:"Enable Advancements"=true
        B:"Enable Furnace Recipes"=true
        B:"Enable Ore Dictionary"=true

        # These often do not generate well, as of now.
        B:"Generate Overlays from Resource Pack"=false

        # These settings can be changed per-client.
        # 
        # Set this to true if you're using a resource pack or overlay textures with transparency for a better appearance.
        B:"Overlays are shaded / are not highlighted"=false

        # ####################################################################################################### #
        # Shade Overrides
        # ------------------------------------------------------------------------------------------------------- #
        # Add the names of any blocks you would like to be shaded or not shaded, opposite of the global setting.
        # For all blocks, the name follows this model ("minecraft" and "0" are never written):
        # 
        #          oreType_bgBlockNamespace_bgBlockName or oreType_bgBlockNamespace_bgBlockName_metaValue
        #                 Example 1:  coal_ore_stone or diamond_ore_sand_1
        #                 Example 2:  basemetals_copper_ore_quark_limestone
        #                 Example 3:  coal_ore
        # 
        # You do have to put the name of the mod for each ore type and for each stone type (unless vanilla). See example 2.
        # You can simply put the ore type and all ores of that type will be overriden. See example 3.
        # ####################################################################################################### #
        S:"Shade Overrides" <
         >

        # To enable built-in textures with shaded backgrounds.
        # Supports a number of blocks, including those from Biomes O' Plenty and Glass Hearts, for sylistic consistency.
        # This may effect resource packs. Check inside of /config/ore_stone_variants_mods/resources.zip for a way around it.
        B:"Use Built-in Blended Textures"=true
    }

    "disable ore variants" {
        # This will automatically disable vanilla support (stone, andesite, diorite, and granite)
        # in the presence of any mod listed here.
        S:"Automatically Disable Vanilla Variants" <
            mineralogy
            undergroundbiomes
         >
    }

    "ore variant drop settings" {
        B:"Variants Drop"=false
        B:"Variants Still Drop with Silk Touch"=true
    }

}


"dense ore variants" {

    "general dense ore settings" {
        # The 0 - 1 chance that dense ores will spawn.
        # Min: 0.0
        # Max: 1.0
        D:"Dense Ore Frequency"=0.09
        I:"Dense Variant Smelting Multiplier"=2

        # Adds a second dense variant of every ore. Drops 1-3 ores instead of just 1.
        B:"Enable Dense Variants"=false
    }

}


"dynamic blocks" {

    ##########################################################################################################
    # variant adder
    #--------------------------------------------------------------------------------------------------------#
    # You can add as many new ore types as you like using any background block at all, blocks from other mods
    # included. A block model will be dynamically generated for each block and they will automatically be added
    # to the world generation, where they will generate in the correct blocks (within height restrictions per
    # ore type). The ores retain all properties of their original counterparts. These blocks currently obey
    # global shade settings, but can still be overridden per-block. The easiest way to find out which name to
    # enter is to press f3 + h in-game to see the block's full name.
    # 
    # This is the basic syntax: "<properties>, <blocks>" OR "<properties> <blocks>"
    # 
    # <properties> can refer to one of several things:
    # 
    #     * The name of the properties, listed under "Compatible Ores:"
    #     * The name of the property group, defined below.
    #     * "all," which uses any valid properties from the property groups below.
    #     * "default," which uses any properties listed in the default groups below.
    #     * The registry name of the ore representing the properties, i.e. "minecraft:diamond_ore."
    #         * if no corresponding properties are found, the properties will be handled dynamically.
    #           In this case, the ore will generate under the same conditions as those of gold_ore,
    #           because world generation properties cannot be handled dynamically. Additionally,
    #           no texture will be generated. You will need to create a property mod or manually
    #           supply one to work around this.
    # 
    # <blocks> can refer to one of several things:
    # 
    #     * The registry name of the block.
    #         * e.g. "minecraft:sandstone" or just "sandstone"
    #         * Use an asterisk (*) in place of the state number to retrieve all applicable properties
    #           for that block.
    #             * e.g. "stained_hardened_clay:*" instead of "stained_hardened_clay:0,"
    #               "stained_hardened_clay:1," "stained_hardened_clay:2," etc.
    #     * The name of the block group, defined below.
    #     * "all," which will place the properties inside of each of the registered block groups.
    #     * "default," which will place the properties inside of each of the default block groups.
    # 
    #       Comma delimited:
    # 
    #           Example 1:  coal_ore, minecraft:sandstone:0
    #           Example 2:  iron_ore, red_sandstone
    #           Example 3:  minecraft, stained_hardened_clay:*
    #           Example 4:  custom_props, all
    #           Example 5:  all, stained_hardened_clay:*
    # 
    #       Or, space delimited:
    # 
    #           Example 6:  minecraft   minecraft
    #           Example 7:  custom_ore  all
    #           Example 8:  gold_ore    netherrack
    #           Example 9:  custom_ore  default
    # 
    # It is possible to replace all default entries with "default, default" or "all, all" to
    # automatically handle spawning default variants, if you prefer having fewer entries in the list.
    # 
    #           Example 10:  all, all
    #           Example 11:  default default
    # 
    # ------------------------------------------------------------------------------------------------------ #
    #                                         Compatible Ores:
    # ------------------------------------------------------------------------------------------------------ #
    # basemetals:
    # 
    # 	basemetals_antimony_ore, basemetals_bismuth_ore, basemetals_copper_ore, basemetals_lead_ore,
    # 	basemetals_mercury_ore, basemetals_nickel_ore, basemetals_pewter_ore, basemetals_platinum_ore,
    # 	basemetals_silver_ore, basemetals_tin_ore, basemetals_zinc_ore, basemetals_adamantine_ore,
    # 	basemetals_coldiron_ore, basemetals_cupronickel_ore, basemetals_starsteel_ore
    # 
    # biomesoplenty:
    # 
    # 	biomesoplenty_amber_ore, biomesoplenty_malachite_ore, biomesoplenty_peridot_ore, biomesoplenty_ruby_ore,
    # 	biomesoplenty_sapphire_ore, biomesoplenty_tanzanite_ore, biomesoplenty_topaz_ore,
    # 	biomesoplenty_amethyst_ore
    # 
    # embers:
    # 
    # 	embers_aluminum_ore, embers_copper_ore, embers_lead_ore, embers_nickel_ore, embers_silver_ore,
    # 	embers_tin_ore
    # 
    # glasshearts:
    # 
    # 	glasshearts_agate_ore, glasshearts_amethyst_ore, glasshearts_onyx_ore, glasshearts_opal_ore,
    # 	glasshearts_ruby_ore, glasshearts_sapphire_ore, glasshearts_topaz_ore
    # 
    # iceandfire:
    # 
    # 	iceandfire_sapphire_ore, iceandfire_silver_ore
    # 
    # immersiveengineering:
    # 
    # 	immersiveengineering_aluminum_ore, immersiveengineering_copper_ore, immersiveengineering_lead_ore,
    # 	immersiveengineering_nickel_ore, immersiveengineering_silver_ore, immersiveengineering_uranium_ore
    # 
    # minecraft:
    # 
    # 	coal_ore, diamond_ore, emerald_ore, gold_ore, iron_ore, lapis_ore, redstone_ore, quartz_ore
    # 
    # mineralogy:
    # 
    # 	mineralogy_phosphorous_ore, mineralogy_sulfur_ore
    # 
    # modernmetals:
    # 
    # 	modernmetals_aluminum_ore, modernmetals_beryllium_ore, modernmetals_boron_ore, modernmetals_cadmium_ore,
    # 	modernmetals_chromium_ore, modernmetals_iridium_ore, modernmetals_magnesium_ore,
    # 	modernmetals_manganese_ore, modernmetals_osmium_ore, modernmetals_plutonium_ore, modernmetals_rutile_ore,
    # 	modernmetals_tantalum_ore, modernmetals_thorium_ore, modernmetals_tungsten_ore, modernmetals_uranium_ore,
    # 	modernmetals_zirconium_ore
    # 
    # quark:
    # 
    # 	quark_biotite_ore
    # 
    # simpleores:
    # 
    # 	simpleores_adamantium_ore, simpleores_copper_ore, simpleores_mythril_ore, simpleores_tin_ore,
    # 	simpleores_onyx_ore
    # 
    # thaumcraft:
    # 
    # 	thaumcraft_amber_ore, thaumcraft_cinnabar_ore
    # 
    # thermalfoundation:
    # 
    # 	thermalfoundation_copper_ore, thermalfoundation_lead_ore, thermalfoundation_nickel_ore,
    # 	thermalfoundation_silver_ore, thermalfoundation_tin_ore, thermalfoundation_aluminum_ore,
    #   thermalfoundation_iridium_ore, thermalfoundation_mithril_ore, thermalfoundation_platinum_ore
    ##########################################################################################################

    "variant adder" {
        S:"Add Blocks Here" <
            immersiveengineering, default
            thaumcraft, default
            thermalfoundation, default
            biomesoplenty, default
            minecraft, default
         >
        B:"Log Skipped Entries"=true

        # Determines whether to separate entries regstered using an asterisk (*) into multiple blocks.
        # E.g. "coal_ore, stained_hardened_clay:*" will create 16 separate blocks instead of one.
        # For backward compatibility with pre-4.0 worlds.
        B:"Separate Asterisk Entries"=false
        B:"Test For Duplicates"=true
    }

    ##########################################################################################################
    # block groups
    #--------------------------------------------------------------------------------------------------------#
    # This category is dynamic. You can actually add fields using the format below
    # to establish additional block groups. Groups that are listed by default can be
    # edited, but may not be removed. You can disable them by disabling support for
    # their respective mods in the mod support category.
    ##########################################################################################################

    "block groups" {
        S:minecraft <
            stone
            stone:5
            stone:3
            stone:1
         >
    }

    ##########################################################################################################
    # property groups
    #--------------------------------------------------------------------------------------------------------#
    # This category is also dynamic and can be used to define additional property groups.
    # Likewise, each default group corresponds to a specific mod and therefore will be
    # automatically listed here if it is removed. To stop this from happening, disable
    # the group's respective mod in the mod support category.
    ##########################################################################################################

    "property groups" {
        S:biomesoplenty <
            biomesoplenty_amber_ore
            biomesoplenty_malachite_ore
            biomesoplenty_peridot_ore
            biomesoplenty_ruby_ore
            biomesoplenty_sapphire_ore
            biomesoplenty_tanzanite_ore
            biomesoplenty_topaz_ore
         >
        S:immersiveengineering <
            immersiveengineering_aluminum_ore
            immersiveengineering_copper_ore
            immersiveengineering_lead_ore
            immersiveengineering_nickel_ore
            immersiveengineering_silver_ore
            immersiveengineering_uranium_ore
         >
        S:minecraft <
            coal_ore
            diamond_ore
            emerald_ore
            gold_ore
            iron_ore
            lapis_ore
            redstone_ore
         >
        S:thaumcraft <
            thaumcraft_amber_ore
            thaumcraft_cinnabar_ore
         >
        S:thermalfoundation <
            thermalfoundation_copper_ore
            thermalfoundation_lead_ore
            thermalfoundation_nickel_ore
            thermalfoundation_silver_ore
            thermalfoundation_tin_ore
         >
    }

    "ore property mods" {
        # This will generate a new zip file containing most of the necessary properties for new ore types to be added
        # to the mod. It is not recommended to generate these from the server side.
        # 
        # Enter the registry names of any ores you would like starter zips generated for. Expect that some values
        # be inaccurate. Expect these ores to not generate in the world until a WorldGenProperties json has been
        # manually created. Zip files will be placed in /config/ore_stone_variants_mods/.
        # 
        # Instructions for use:
        # 
        # 	1. Enter any registry names here. They will be removed once the game has loaded.
        # 	2. Load the game.
        # 	3. Load any world--this is necessary for some values to be retrieved.
        # 	4. Open or extract the zip file. Check the contents of each json. Some values are
        # 	   estimated and thus not exact.
        # 	5. (Optional) Manually create a WorldGenProperties json so that the ore can be
        # 	   generated in the world by the mod. See template.zip for more info
        S:"Generate Starter Mods" <
         >
    }

}


"mod support" {
    # Setting this value to true will ensure that OSV does not create ore variants that already
    # exist through undergroundbiomes. When this value is false, OSV will create variants for
    # UBC's stone types regardless of whether they already exist.
    B:"Avoid Duplicate UBC Variants"=true

    "enable mods" {
        B:"Base Metals"=true
        B:"Biomes O' Plenty"=true
        B:Earthworks=true
        B:Embers=true
        B:Geolosys=true
        B:"Glass Hearts"=true
        B:"Ice and Fire"=true
        B:"Immersive Engineering"=true
        B:Mineralogy=true
        B:"Modern Metals"=true
        B:Quark=true
        B:Rustic=true
        B:SimpleOres=true
        B:Thaumcraft=true
        B:"Thermal Foundation"=true
        B:"Underground Biomes"=true
        B:Vanilla=true
    }

    "mod generation hax" {
        B:BaseMetals=false
        B:"Biomes O' Plenty"=false
        B:Embers=false
        B:"Glass Hearts"=false
        B:"Ice and Fire"=false
        B:"Immersive Engineering"=false
        B:SimpleOres=false
        B:Thaumcraft=false
    }

}


"world generation settings" {
    B:"Enable Generation"=true

    dimensions {
        # Mainly for performance purposes. You may try removing -1 and 1 if you don't have any blocks spawning
        # in the End or Nether. Or, you may need to add to this array if you want ores spawning in modded dimensions.
        # If this array is empty, ores will be able to spawn anywhere.
        I:"Dimension Whitelist" <
            -1
            0
            1
         >
    }

    "generator overrides" {
        # For better compatibility with some terrain gen mods. Set this to false if another terrain mod also
        # spawns patches of gravel, andesite, etc.
        # For best compatibility, please manually disable ore spawning from all other supported mods, or
        # Use the mod generation settings below to attempt to handle this automatically.
        B:"Replace Vanilla Ore and Stone Generation"=true
    }

    "new stone gen variables" {
        # Min: 1
        # Max: 3
        I:"Andesite Layer"=2

        # Min: -2
        # Max: 2
        I:"Andesite Size"=1

        # Min: 1
        # Max: 3
        I:"Diorite Layer"=3

        # Min: -2
        # Max: 2
        I:"Diorite Size"=1

        # -2 = off; -1 = half size; 0 = vanilla size; 1 = 1.33 x vanilla; 2 = 1.58 x vanilla
        # 2 may cause a small amount of cascading gen lag.
        # It is recommended to use another mod, such as Cave Generator, to handle spawning
        # of such large stone veins.
        # Min: -2
        # Max: 2
        I:"Dirt Size"=1

        # Generates stone variants in layers. 1 = y(0 - 20); 2 = y(25 - 45); 3 = y(40 - 80)
        B:"Generate Stone Variants in Layers"=false

        # Min: -2
        # Max: 2
        I:"Granite Size"=1

        # Min: -2
        # Max: 2
        I:"Gravel Size"=1

        # -1 = half count; 0 = vanilla count; 1 = 2 x vanilla; 2 = 4 x vanilla.
        # Min: -1
        # Max: 2
        I:"Stone Variant Count"=0

        # Min: 1
        # Max: 3
        I:graniteLayer=1
    }

    "ore generation settings" {
        B:"Biome Specific Generation"=true

        # The probability that any ore will spawn outside of its selected regions. Allows more types to be easily found.
        # Bear in mind that ore veins will still be relatively large and thus easy to find. Limited to a max of 5.0%.
        # Min: 0.0
        # Max: 5.0
        D:"Default Probability For Unselected Chunks"=0.0

        # Ores most often generate near others of the same type.
        # Large ore veins become larger; small ore veins become more frequent.
        # World generation may be notably slower, by not severely.
        B:"Large Ore Clusters"=false
    }

}


